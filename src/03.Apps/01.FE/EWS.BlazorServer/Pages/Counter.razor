@page "/counter"

@using Microsoft.AspNetCore.SignalR.Client
@using EWS.BlazorServer.Components.FetchData
@using EWS.BlazorShared.Base
@using Serilog.Core

@inherits JComponent<Counter, JDlgOptions<bool>, bool>

<JComponentLayout>
    <PageTitle>Counter</PageTitle>

    <h1>Counter</h1>

    <p role="status">Current count: @currentCount</p>

    <Button Type="@ButtonType.Primary" @onclick="@(async () => await IncrementCount())">Worker Demo</Button>
</JComponentLayout>

@code {
    [Inject] private HubConnection _hubConnection { get; set; }
    [Inject] private IFetchDataManager _manager { get; set; }    
    private int currentCount = 0;

    private async Task IncrementCount()
    {
        await _hubConnection.InvokeAsync("Hello");
        var isOk = await this.ShowConfirmOkCancelAsync("Information", "Increment?", ConfirmIcon.Warning);
        if (isOk)
        {
            await this.ShowConfirmAsync("Infomation", "증가 되었다.", ConfirmIcon.Info);
            currentCount++;
            
            var dateTime = await this.InvokeAsync<string>("MyLib.GetCurrentTime", null);
            await this.InvokeVoidAsync("alert", dateTime);
            
            this.ShowProgress();
            await _manager.CallWorker(_hubConnection.ConnectionId);
            await this.ShowMessageAsync("Work in progress", ENUM_MESSAGE_TYPE.Info);
            this.CloseProgress();
        }
        Logger.LogInformation("IsOk : {Result}", isOk);
    }

}